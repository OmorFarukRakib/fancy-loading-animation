{"version":3,"sources":["../../src/FancyAnimatedLoading/LoadingAnimation.js","App.js","index.js"],"names":["loadingAnimationCharacterArray","LoadingAnimation","props","useState","selectedLoadingCharacter","setSelectedLoadingCharacter","loadingContainerStyleFromProps","setLoadingContainerStyleFromProps","loadingCharacterStyle","setLoadingCharacterStyle","useEffect","background","width","height","border","borderRadius","boxShadow","transform","console","animationDuration","className","styles","style","loadingTextStyle","loadingSize","loadingContainerVisibility","loadingContainerWidth","loadingContainerHeight","loadingContainerBorder","loadingContainerRadius","loadingContainerColor","loadingContainerShadow","loadingAnimationVarient","loadingCharacterDirection","loadingAnimationDelay","loadingText","loadingDotShow","loadingAnimationStyle","loadingContainerStyle","App","setLoadingAnimationVarient","setLoadingCharacterDirection","setLoadingContainerVisibility","setLoadingDotShow","setLoadingText","setLoadingSize","setLoadingAnimationDelay","setLoadingContainerRadius","Box","sx","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","marginTop","component","m","noValidate","autoComplete","TextField","multiline","type","inputProps","min","max","step","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a20ef88c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport styles from './index.css'\r\n\r\nconst loadingAnimationCharacterArray = [\r\n  'bug',\r\n  'puppy',\r\n  'ghost',\r\n  'green-monster',\r\n  'bee',\r\n  'hairy-monster',\r\n  'robot-ball',\r\n  'blue-bat',\r\n  'paper-bird'\r\n]\r\n\r\nconst LoadingAnimation = (props) => {\r\n  const [selectedLoadingCharacter, setSelectedLoadingCharacter] =\r\n    useState('bug')\r\n  const [loadingContainerStyleFromProps, setLoadingContainerStyleFromProps] =\r\n    useState({})\r\n  const [loadingCharacterStyle, setLoadingCharacterStyle] = useState({})\r\n\r\n  useEffect(() => {\r\n    if (\r\n      loadingAnimationCharacterArray.includes(props.loadingAnimationVarient)\r\n    ) {\r\n      setSelectedLoadingCharacter(props.loadingAnimationVarient)\r\n    } else {\r\n      setSelectedLoadingCharacter('bug')\r\n    }\r\n    if (props.loadingContainerVisibility) {\r\n      setLoadingContainerStyleFromProps({\r\n        background: props.loadingContainerColor,\r\n        width: `${props.loadingContainerWidth}px`,\r\n        height: `${props.loadingContainerHeight}px`,\r\n        border: props.loadingContainerBorder,\r\n        borderRadius: `${props.loadingContainerRadius}%`,\r\n        boxShadow: props.loadingContainerShadow,\r\n        transform: `scale(${props.loadingSize})`\r\n      })\r\n    } else {\r\n      setLoadingContainerStyleFromProps({\r\n        background: 'transparent',\r\n        transform: `scale(${props.loadingSize})`\r\n      })\r\n    }\r\n    console.log(selectedLoadingCharacter)\r\n    if (props.loadingCharacterDirection === 'right') {\r\n      setLoadingCharacterStyle({\r\n        transform: `translate(-50%, -50%) rotateY(180deg)`,\r\n        animationDuration: `${props.loadingAnimationDelay}s`\r\n      })\r\n    } else {\r\n      setLoadingCharacterStyle({\r\n        transform: `translate(-50%, -50%)`,\r\n        animationDuration: `${props.loadingAnimationDelay}s`\r\n      })\r\n    }\r\n  }, [props])\r\n  console.log(styles)\r\n  const dcd = () => {\r\n    if (selectedLoadingCharacter === 'bug') return styles.bug\r\n    else if (selectedLoadingCharacter === 'puppy') return styles.puppy\r\n    else if (selectedLoadingCharacter === 'ghost') return styles.ghost\r\n    else if (selectedLoadingCharacter === 'green-monster')\r\n      return styles.green_monster\r\n    else if (selectedLoadingCharacter === 'robot-ball') return styles.robot_ball\r\n    else if (selectedLoadingCharacter === 'blue-bat') return styles.blue_bat\r\n    else if (selectedLoadingCharacter === 'paper-bird') return styles.paper_bird\r\n    else if (selectedLoadingCharacter === 'bee') return styles.bee\r\n    else if (selectedLoadingCharacter === 'hairy-monster')\r\n      return styles.hairy_monster\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className='loading-container'> */}\r\n      <div\r\n        className={styles.loading_container}\r\n        style={{\r\n          ...loadingContainerStyleFromProps,\r\n          ...props.loadingContainerStyle\r\n        }}\r\n      >\r\n        <div\r\n          className={`${styles.character} \r\n          \r\n         ${dcd()}\r\n        \r\n          `}\r\n          style={{ ...loadingCharacterStyle, ...props.loadingAnimationStyle }}\r\n        ></div>\r\n        <p className={styles.loading_text} style={props.loadingTextStyle}>\r\n          {props.loadingText}\r\n          {props.loadingDotShow && (\r\n            <React.Fragment>\r\n              <span>.</span>\r\n              <span>.</span>\r\n              <span>.</span>\r\n            </React.Fragment>\r\n          )}\r\n        </p>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nLoadingAnimation.defaultProps = {\r\n  loadingSize: 1, // Done\r\n  loadingContainerVisibility: true, // DONE\r\n  loadingContainerWidth: 280, // Done\r\n  loadingContainerHeight: 280, // Done\r\n  loadingContainerBorder: '1px solid rgb(0, 0, 0, 0.3)', // Done\r\n  loadingContainerRadius: 50, //Done\r\n  loadingContainerColor: '#d8d8d8', // Done\r\n  loadingContainerShadow: 'inset 15px 15px 10px #999', // Done\r\n  loadingAnimationVarient: 'bug', // Done\r\n  loadingCharacterDirection: 'left', // Done\r\n  loadingAnimationDelay: 1, // Done\r\n  loadingText: 'Loading', // Done\r\n  loadingDotShow: true, //Done\r\n  loadingTextStyle: {},\r\n  loadingAnimationStyle: {},\r\n  loadingContainerStyle: {}\r\n}\r\n\r\nexport default LoadingAnimation\r\n","import React, { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select from '@mui/material/Select'\nimport TextField from '@mui/material/TextField'\nimport FancyLoadingAnimation from 'fancy-loading-animation'\nimport 'fancy-loading-animation/dist/index.css'\n\nconst App = () => {\n  const [loadingAnimationVarient, setLoadingAnimationVarient] = useState('bug')\n  const [loadingCharacterDirection, setLoadingCharacterDirection] =\n    useState('left')\n  const [loadingContainerVisibility, setLoadingContainerVisibility] =\n    useState(true)\n  const [loadingDotShow, setLoadingDotShow] = useState(true)\n  const [loadingText, setLoadingText] = useState('LOADING')\n  const [loadingSize, setLoadingSize] = useState(1)\n  const [loadingAnimationDelay, setLoadingAnimationDelay] = useState(0.2)\n  const [loadingContainerRadius, setLoadingContainerRadius] = useState(50)\n\n  const handleChangeVarient = (event) => {\n    setLoadingAnimationVarient(event.target.value)\n  }\n  const handleChangeDirection = (event) => {\n    setLoadingCharacterDirection(event.target.value)\n  }\n  const handleChangeContainerVisibility = (event) => {\n    setLoadingContainerVisibility(event.target.value)\n  }\n  const handleChangeLoadingDotShow = (event) => {\n    setLoadingDotShow(event.target.value)\n  }\n  const handleChangeLoadingText = (event) => {\n    setLoadingText(event.target.value)\n  }\n  const handleChangeLoadingSize = (event) => {\n    setLoadingSize(event.target.value)\n  }\n  const handleChangeLoadingAnimationDelay = (event) => {\n    setLoadingAnimationDelay(event.target.value)\n  }\n  const handleChangeLoadingContainerRadius = (event) => {\n    setLoadingContainerRadius(event.target.value)\n  }\n  return (\n    <>\n      <div className='input-props-div-left'>\n        <Box sx={{ width: '180px' }}>\n          <FormControl fullWidth style={{ width: '180px' }}>\n            <InputLabel id='demo-simple-select-label'>\n              loadingAnimationVarient\n            </InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={loadingAnimationVarient}\n              label='loadingAnimationVarient'\n              onChange={handleChangeVarient}\n            >\n              <MenuItem value={'bee'}>bee</MenuItem>\n              <MenuItem value={'bug'}>bug</MenuItem>\n              <MenuItem value={'blue-bat'}>blue-bat</MenuItem>\n              <MenuItem value={'ghost'}>ghost</MenuItem>\n              <MenuItem value={'green-monster'}>green-monster</MenuItem>\n              <MenuItem value={'hairy-monster'}>hairy-monster</MenuItem>\n              <MenuItem value={'puppy'}>Puppy</MenuItem>\n              <MenuItem value={'robot-ball'}>robot-ball</MenuItem>\n              <MenuItem value={'paper-bird'}>Paper-bird</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl fullWidth style={{ width: '180px', marginTop: '20px' }}>\n            <InputLabel id='demo-simple-select-label'>\n              loadingCharacterDirection\n            </InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={loadingCharacterDirection}\n              label='loadingCharacterDirection'\n              onChange={handleChangeDirection}\n            >\n              <MenuItem value={'left'}>left</MenuItem>\n              <MenuItem value={'right'}>right</MenuItem>\n            </Select>\n          </FormControl>\n          <br />\n          <FormControl fullWidth style={{ width: '180px', marginTop: '20px' }}>\n            <InputLabel id='demo-simple-select-label'>\n              loadingContainerVisibility\n            </InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={loadingContainerVisibility}\n              label='loadingContainerVisibility'\n              onChange={handleChangeContainerVisibility}\n            >\n              <MenuItem value={true}>true</MenuItem>\n              <MenuItem value={false}>false</MenuItem>\n            </Select>\n          </FormControl>\n          {/* dot  */}\n          <FormControl fullWidth style={{ width: '180px', marginTop: '20px' }}>\n            <InputLabel id='demo-simple-select-label'>\n              loadingDotShow\n            </InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={loadingDotShow}\n              label='loadingDotShow'\n              onChange={handleChangeLoadingDotShow}\n            >\n              <MenuItem value={true}>true</MenuItem>\n              <MenuItem value={false}>false</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </div>\n\n      <div className='input-props-div-right'>\n        <Box\n          component='form'\n          sx={{\n            '& > :not(style)': { m: 1, width: '180px' }\n          }}\n          noValidate\n          autoComplete='off'\n        >\n          <TextField\n            id='outlined-name'\n            label='loadingText'\n            value={loadingText}\n            onChange={handleChangeLoadingText}\n            multiline\n          />\n          <br />\n          <TextField\n            id='outlined-name'\n            label='loadingSize'\n            value={loadingSize}\n            onChange={handleChangeLoadingSize}\n            type='number'\n            inputProps={{ min: '0', max: '10', step: '0.1' }}\n          />\n          <br />\n          <TextField\n            id='outlined-name'\n            label='loadingAnimationDelay'\n            value={loadingAnimationDelay}\n            onChange={handleChangeLoadingAnimationDelay}\n            type='number'\n            inputProps={{ min: '0', max: '10', step: '0.1' }}\n          />\n          <br />\n          <TextField\n            id='outlined-name'\n            label='loadingContainerRadius'\n            value={loadingContainerRadius}\n            onChange={handleChangeLoadingContainerRadius}\n            type='number'\n            inputProps={{ min: '0', max: '50', step: '5' }}\n          />\n        </Box>\n      </div>\n\n      <div className='example-div'>\n        <FancyLoadingAnimation\n          loadingAnimationVarient={loadingAnimationVarient}\n          loadingCharacterDirection={loadingCharacterDirection}\n          // loadingTextStyle={{ color: 'Red' }}\n          loadingContainerVisibility={loadingContainerVisibility}\n          loadingDotShow={loadingDotShow}\n          loadingText={loadingText}\n          loadingSize={loadingSize}\n          loadingAnimationDelay={loadingAnimationDelay}\n          loadingContainerRadius={loadingContainerRadius}\n        />\n      </div>\n      <div className='footer-div'>\n        To explore all the props, please see the full documentation.{' '}\n        <a href='https://github.com/omorfarukrakib/fancy-loading-animation'>\n          Here!\n        </a>{' '}\n      </div>\n    </>\n  )\n}\nexport default App\n\n\n//    ALL the DEFAULT VALUES\n//   _______________________________\n//    loadingSize: 1, // Done\n//   loadingContainerVisibility: true, // DONE\n//   loadingContainerWidth: 280, // Done\n//   loadingContainerHeight: 280, // Done\n//   loadingContainerBorder: '1px solid rgb(0, 0, 0, 0.3)', // Done\n//   loadingContainerRadius: 50, //Done\n//   loadingContainerColor: '#d8d8d8', // Done\n//   loadingContainerShadow: 'inset 15px 15px 10px #999', // Done\n//   loadingAnimationVarient: 'puppy', // Done\n//   loadingCharacterDirection: 'left', // Done\n//   loadingAnimationDelay: 1, // Done\n//   loadingText: 'Loading', // Done\n//   loadingDotShow: true //Done\n//   _______________________________\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}